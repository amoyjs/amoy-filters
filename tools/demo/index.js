!function(t,e){"use strict";var n="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",o="varying vec2 vTextureCoord;//passed from vect shader \nuniform sampler2D uSampler; // 2d texture\n\nuniform vec4 filterArea;\n//uniform vec2 dimensions;\n\nuniform float uTime;\nuniform float uRainR; // Radius of the rain\n\n// Maximum number of cells a ripple can cross.\n#define MAX_RADIUS 2\n\n// Set to 1 to hash twice. Slower, but less patterns.\n#define DOUBLE_HASH 0\n\n// Hash functions shamefully stolen from:\n// https://www.shadertoy.com/view/4djSRW\n#define HASHSCALE1 .1031\n#define HASHSCALE3 vec3(.1031, .1030, .0973)\n\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * HASHSCALE3);\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nvec4 image()\n{\n\n\tvec2 uv1 = (vTextureCoord * filterArea.xy) / filterArea.y * uRainR;\n    \n    vec2 p0 = floor(uv1);\n\n    vec2 circles = vec2(0.);\n    for (int j = -MAX_RADIUS; j <= MAX_RADIUS; ++j)\n    {\n        for (int i = -MAX_RADIUS; i <= MAX_RADIUS; ++i)\n        {\n\t\t\tvec2 pi = p0 + vec2(i, j);\n            #if DOUBLE_HASH\n            vec2 hsh = hash22(pi);\n            #else\n            vec2 hsh = pi;\n            #endif\n            vec2 p = pi + hash22(hsh);\n\n            float t = fract(0.3*uTime + hash12(hsh));\n            vec2 v = p - uv1;\n            float d = length(v) - (float(MAX_RADIUS) + 1.)*t;\n\n            float h = 1e-3;\n            float d1 = d - h;\n            float d2 = d + h;\n            float p1 = sin(31.*d1) * smoothstep(-0.6, -0.3, d1) * smoothstep(0., -0.3, d1);\n            float p2 = sin(31.*d2) * smoothstep(-0.6, -0.3, d2) * smoothstep(0., -0.3, d2);\n            circles += 0.5 * normalize(v) * ((p2 - p1) / (2. * h) * (1. - t) * (1. - t));\n        }\n    }\n    circles /= float((MAX_RADIUS*2+1)*(MAX_RADIUS*2+1));\n\n    float intensity = mix(0.01, 0.15, smoothstep(0.1, 0.6, abs(fract(0.05*uTime + 0.5)*2.-1.)));\n    vec3 n = vec3(circles, sqrt(1. - dot(circles, circles)));\n\n    vec3 color = texture2D(uSampler, vTextureCoord).rgb + 5.*pow(clamp(dot(n, normalize(vec3(1., 0.7, 0.5))), 0., 1.), 6.);\n\n\treturn vec4(color, 1.0);\n}\n\n\nvoid main(void)\n{\n    gl_FragColor = image();\n}",i=function(t){function e(e,i){void 0===e&&(e=2),void 0===i&&(i=0),t.call(this,n,o),this.rainR=e,this.delta=i}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var i={rainR:{configurable:!0},delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uRainR=this.rainR<=0?2:this.rainR,this.uniforms.uTime=this.delta<=0?2:this.delta,t.applyFilter(this,e,n,o)},i.rainR.get=function(){return this.uniforms.uRainR},i.rainR.set=function(t){this.uniforms.uRainR=t},i.delta.get=function(){return this.uniforms.uTime},i.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,i),e}(t.Filter),r="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",a="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform sampler2D uSampler; // 2d texture\nuniform float uTileSize;\n\nvoid main(void)\n{\n\n    vec2 uv = vTextureCoord;\n\n    uv = uv * uTileSize;\n   \n    uv = floor(uv);\n   \n    uv = uv / uTileSize;\n   \n    vec4 tex = texture2D(uSampler, uv);\n  \n    gl_FragColor = tex;\n}\n",s=function(t){function e(e){void 0===e&&(e=32),t.call(this,r,a),this.uniforms.dimensions=new Float32Array(2),this.tileSize=e}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={tileSize:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uTileSize=this.tileSize<=0?32:this.tileSize,this.uniforms.dimensions[0]=e.filterFrame.width,this.uniforms.dimensions[1]=e.filterFrame.height,t.applyFilter(this,e,n,o)},n.tileSize.get=function(){return this.uniforms.uTileSize},n.tileSize.set=function(t){(t<0||t>64)&&(t=32),this.uniforms.uTileSize=t},Object.defineProperties(e.prototype,n),e}(t.Filter),u="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",c="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform vec4 filterArea;\n\nuniform sampler2D uSampler; // 2d texture\n\nuniform float uIntensity;\nuniform float uBlursize;\nuniform float uThreshold;\n\n#define T(t, c, u, v, m) texture2D(t, c + vec2(u, v), m)\n\nvec4 B(in vec2 C, in sampler2D X, in float m)\n{\n\tvec2 d = m / filterArea.xy;\n    \n    vec4  c = texture2D(X, C, m);\n    c += T(X, C,  d.x, 0.0, m);    \t\n    c += T(X, C, -d.x, 0.0, m);    \t\n    c += T(X, C, 0.0,  d.y, m);    \t\n    c += T(X, C, 0.0, -d.y, m);    \t\n    c += T(X, C,  d.x, d.y, m);    \t\n    c += T(X, C, -d.x, d.y, m);    \t\n    c += T(X, C,  d.x,-d.y, m);    \t\n    c += T(X, C, -d.x,-d.y, m);    \n    return c / 9.0;\n}\n\nint modi(int x, int y) {\n    return x - y * (x / y);\n}\n\nint and(int a, int b) {\n    int result = 0;\n    int n = 1;\n\tconst int BIT_COUNT = 32;\n\n    for(int i = 0; i < BIT_COUNT; i++) {\n        if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n            result += n;\n        }\n\n        a = a / 2;\n        b = b / 2;\n        n = n * 2;\n\n        if (!(a > 0 && b > 0))\n            break;\n    }\n    return result;\n}\n\nvec4 vibrance(vec4 inCol, float vibrance) //r,g,b 0.0 to 1.0,  vibrance 1.0 no change, 0.0 image B&W.\n{\n    vec4 outCol;\n    if (vibrance <= 1.0)\n    {\n        float avg = dot(inCol.rgb, vec3(0.3, 0.6, 0.1));\n        outCol.rgb = mix(vec3(avg), inCol.rgb, vibrance); \n    }\n    else // vibrance > 1.0\n    {\n        float hue_a, a, f, p1, p2, p3, i, h, s, v, amt, _max, _min, dlt;\n        float br1, br2, br3, br4, br5, br2_or_br1, br3_or_br1, br4_or_br1, br5_or_br1;\n        int use;\n\n        _min = min(min(inCol.r, inCol.g), inCol.b);\n        _max = max(max(inCol.r, inCol.g), inCol.b);\n        dlt = _max - _min + 0.00001 /*Hack to fix divide zero infinities*/;\n        h = 0.0;\n        v = _max;\n\n\t\tbr1 = step(_max, 0.0);\n        s = (dlt / _max) * (1.0 - br1);\n        h = -1.0 * br1;\n\n\t\tbr2 = 1.0 - step(_max - inCol.r, 0.0); \n        br2_or_br1 = max(br2, br1);\n        h = ((inCol.g - inCol.b) / dlt) * (1.0 - br2_or_br1) + (h*br2_or_br1);\n\n\t\tbr3 = 1.0 - step(_max - inCol.g, 0.0); \n        \n        br3_or_br1 = max(br3, br1);\n        h = (2.0 + (inCol.b - inCol.r) / dlt) * (1.0 - br3_or_br1) + (h*br3_or_br1);\n\n        br4 = 1.0 - br2*br3;\n        br4_or_br1 = max(br4, br1);\n        h = (4.0 + (inCol.r - inCol.g) / dlt) * (1.0 - br4_or_br1) + (h*br4_or_br1);\n\n        h = h*(1.0 - br1);\n\n        hue_a = abs(h); // between h of -1 and 1 are skin tones\n        a = dlt;      // Reducing enhancements on small rgb differences\n\n        // Reduce the enhancements on skin tones.    \n        a = step(1.0, hue_a) * a * (hue_a * 0.67 + 0.33) + step(hue_a, 1.0) * a;                                    \n        a *= (vibrance - 1.0);\n        s = (1.0 - a) * s + a * pow(s, 0.25);\n\n        i = floor(h);\n        f = h - i;\n\n        p1 = v * (1.0 - s);\n        p2 = v * (1.0 - (s * f));\n        p3 = v * (1.0 - (s * (1.0 - f)));\n\n        inCol.rgb = vec3(0.0); \n        i += 6.0;\n        //use = 1 << ((int)i % 6);\n        use = int(pow(2.0,mod(i,6.0)));\n        a = float(and(use , 1)); // i == 0;\n        use = use / 2;\n        inCol.rgb += a * vec3(v, p3, p1);\n\n        a = float(and(use , 1)); // i == 1;\n        use = use / 2;\n        inCol.rgb += a * vec3(p2, v, p1); \n\n        a = float( and(use,1)); // i == 2;\n        use = use / 2;\n        inCol.rgb += a * vec3(p1, v, p3);\n\n        a = float(and(use, 1)); // i == 3;\n        use = use / 2;\n        inCol.rgb += a * vec3(p1, p2, v);\n\n        a = float(and(use, 1)); // i == 4;\n        use = use / 2;\n        inCol.rgb += a * vec3(p3, p1, v);\n\n        a = float(and(use, 1)); // i == 5;\n        use = use / 2;\n        inCol.rgb += a * vec3(v, p1, p2);\n\n        outCol = inCol;\n    }\n    return outCol;\n}\n\nvec4 mainImage()\n{\n    float t = uThreshold, // threshold\n\t \t  I = uIntensity, // intensity\n          b = uBlursize; // blursize\n\n    vec4 c = texture2D(uSampler, vTextureCoord);//采样\n    vec4 H = clamp(B(vTextureCoord, uSampler, b) - t, 0.0, 1.0) * 1.0 / (1.0 - t); // highlight\n    vec4 imgC = 1.0 - (1.0 - c) * (1.0 - H * I); //Screen Blend Mode\n    \n    imgC = vibrance(imgC, 2.0);\n    return imgC;\n}\n\nvoid main(void)\n{ \n    gl_FragColor = mainImage();\n}",l=function(t){function e(e,n){void 0===e&&(e=3),void 0===n&&(n=2),t.call(this,u,c),this.intensity=e,this.blursize=n,this.threshold=.5}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={intensity:{configurable:!0},blursize:{configurable:!0},threshold:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uIntensity=this.intensity<=0?3:this.intensity,this.uniforms.uBlursize=this.blursize<=0?2:this.blursize,this.uniforms.uThreshold=this.threshold<=0?0:this.threshold,t.applyFilter(this,e,n,o)},n.intensity.get=function(){return this.uniforms.uIntensity},n.intensity.set=function(t){this.uniforms.uIntensity=Math.min(Math.max(2,t),6)},n.blursize.get=function(){return this.uniforms.uBlursize},n.blursize.set=function(t){this.uniforms.uBlursize=Math.min(Math.max(2,t),6)},n.threshold.get=function(){return this.uniforms.uThreshold},n.threshold.set=function(t){this.uniforms.uThreshold=Math.min(Math.max(0,t),1)},Object.defineProperties(e.prototype,n),e}(t.Filter),f="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",v="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform vec4 filterArea;\nuniform sampler2D uSampler;// 2d texture\n\nuniform float uPosx;\nuniform float uPosy;\n\nvoid main(void)\n{\nvec2 uv=vTextureCoord;\n\nvec3 col=texture2D(uSampler,uv).xyz;\n\nvec2 fragCoord=vTextureCoord*filterArea.xy;\n\nfloat lightY=0.1*filterArea.y;\n\nvec3 lightPos=vec3(uPosx,lightY,uPosy);\n\nvec3 lightDir=lightPos-vec3(fragCoord.x,0.,fragCoord.y);\n\nfloat diffuse=max(dot(normalize(lightDir),vec3(0.,1.,0.)),0.);\n\ngl_FragColor=vec4(col,1.)*diffuse;\n\n}",d=function(t){function e(e,n){void 0===e&&(e=10),void 0===n&&(n=10),t.call(this,f,v),this.posx=e,this.posy=n}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={posx:{configurable:!0},posy:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uPosx=this.posx<=0?10:this.posx,this.uniforms.uPosy=this.posy<=0?10:this.posy,t.applyFilter(this,e,n,o)},n.posx.get=function(){return this.uniforms.uPosx},n.posx.set=function(t){this.uniforms.uPosx=t},n.posy.get=function(){return this.uniforms.uPosy},n.posy.set=function(t){this.uniforms.uPosy=t},Object.defineProperties(e.prototype,n),e}(t.Filter),p="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",m="varying vec2 vTextureCoord;//passed from vect shader\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uPosx;\nuniform float uPosy;\nuniform float uTime;\n\nfloat noise(float t)\n{\n\treturn texture2D(uSampler,vec2(t,0.)/filterArea.xy).x;\n}\n\nfloat noise(vec2 t)\n{\n\treturn texture2D(uSampler,(t+vec2(uTime))/filterArea.xy).x;\n}\n\nvec3 lenshalo(vec2 uv,vec2 pos)\n{\n\tvec2 m=uv-pos;\n\tvec2 uvd=uv*(length(uv));\n\t\n\tfloat ang=atan(m.y,m.x);\n\tfloat dist=length(m);dist=pow(dist,.1);\n\tfloat n=noise(vec2((ang-uTime/9.)*16.,dist*32.));\n\t\n\tfloat f0=1./(length(uv-pos)*16.+1.);\n\t\n\tf0=f0+f0*(sin((ang+uTime/18.+noise(abs(ang)+n/2.)*2.)*12.)*.1+dist*.1+.8);\n\t\n\tfloat f2=max(1./(1.+32.*pow(length(uvd+.8*pos),2.)),.0)*.25;\n\tfloat f22=max(1./(1.+32.*pow(length(uvd+.85*pos),2.)),.0)*.23;\n\tfloat f23=max(1./(1.+32.*pow(length(uvd+.9*pos),2.)),.0)*.21;\n\t\n\tvec2 uvx=mix(uv,uvd,-.5);\n\t\n\tfloat f4=max(.01-pow(length(uvx+.4*pos),2.4),.0)*6.;\n\tfloat f42=max(.01-pow(length(uvx+.45*pos),2.4),.0)*5.;\n\tfloat f43=max(.01-pow(length(uvx+.5*pos),2.4),.0)*3.;\n\t\n\tuvx=mix(uv,uvd,-.4);\n\t\n\tfloat f5=max(.01-pow(length(uvx+.2*pos),5.5),.0)*2.;\n\tfloat f52=max(.01-pow(length(uvx+.4*pos),5.5),.0)*2.;\n\tfloat f53=max(.01-pow(length(uvx+.6*pos),5.5),.0)*2.;\n\t\n\tuvx=mix(uv,uvd,-.5);\n\t\n\tfloat f6=max(.01-pow(length(uvx-.3*pos),1.6),.0)*6.;\n\tfloat f62=max(.01-pow(length(uvx-.325*pos),1.6),.0)*3.;\n\tfloat f63=max(.01-pow(length(uvx-.35*pos),1.6),.0)*5.;\n\t\n\tvec3 c=vec3(.0);\n\t\n\tc.r+=f2+f4+f5+f6;c.g+=f22+f42+f52+f62;c.b+=f23+f43+f53+f63;\n\tc+=vec3(f0);\n\t\n\treturn c;\n}\n\nvec3 cc(vec3 color,float factor,float factor2)// color modifier\n{\n\tfloat w=color.x+color.y+color.z;\n\treturn mix(color,vec3(w)*factor,w*factor2);\n}\n\nvoid main(void)\n{\n\tvec2 uv=vTextureCoord.xy-.5;\n\t\n\tuv.x*=filterArea.x/filterArea.y;//fix aspect ratio\n\t\n\tvec3 mouse=vec3(vec2(uPosx,uPosy).xy/filterArea.xy-.5,0.);\n\t\n\tmouse.x*=filterArea.x/filterArea.y;//fix aspect ratio\n\t\n\tvec3 color=vec3(1.4,1.2,1.)*lenshalo(uv,mouse.xy);\n\t\n\tcolor=cc(color,.5,.1);\n\t\n\tgl_FragColor=vec4(color,1.)+texture2D(uSampler,vTextureCoord);\n}",x=function(t){function e(e,n,o){void 0===e&&(e=10),void 0===n&&(n=10),void 0===o&&(o=0),t.call(this,p,m),this.posx=e,this.posy=n,this.delta=o}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={posx:{configurable:!0},posy:{configurable:!0},delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uPosx=this.posx<=0?10:this.posx,this.uniforms.uPosy=this.posy<=0?10:this.posy,this.uniforms.uTime=this.delta<=0?2:this.delta,t.applyFilter(this,e,n,o)},n.posx.get=function(){return this.uniforms.uPosx},n.posx.set=function(t){this.uniforms.uPosx=t},n.posy.get=function(){return this.uniforms.uPosy},n.posy.set=function(t){this.uniforms.uPosy=t},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),h="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",y="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform sampler2D uSampler; // 2d texture\nuniform float uTime;\n\nfloat rand(float co) {\n    return fract(sin(dot(co,12.9898+78.233)) * 43758.5453);\n}\n\nvoid main(void) {\n\tvec2 uv = vTextureCoord;\n\tvec2 uv1 = uv;\n    uv1.y-=rand(uv.x*uTime)/60.;\n    \n    vec4 e = texture2D(uSampler,uv1);\n    vec4 bn = vec4(vec3(e.r+e.g+e.b)/3.,1.0);\n\t\n\tvec2 offset = vec2(0.01*rand(uTime),sin(uTime)/30.);\n\te.r = texture2D(uSampler, uv+offset.xy).r;\n\te.g = texture2D(uSampler, uv).g;\n\te.b = texture2D(uSampler, uv+offset.yx).b;\n\n    if(sin(uTime*rand(uTime))<0.99) {\n        gl_FragColor=mix(e,bn,0.6);\n    } else {\n        uv.y+=rand(uTime)/(sin(uTime)*10.);\n        uv.x-=rand(uTime+2.)/(sin(uTime)*10.)/30.;\n        gl_FragColor=texture2D(uSampler,uv);\n    }\n}",g=function(t){function e(e){void 0===e&&(e=0),t.call(this,h,y),this.delta=e}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uTime=this.delta<=0?0:this.delta,t.applyFilter(this,e,n,o)},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),b="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",C="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform sampler2D uSampler;// 2d texture\nuniform sampler2D nextPageTexture;// 2d texture\n\nuniform vec4 filterArea;\n\nuniform float uPosx;\nuniform float uPosy;\nuniform float uStartPosx;\nuniform float uStartPosy;\nuniform float uRadius;\n\n\n#define pi 3.14159265359\n//#define uRadius .04\n\n#define iResolution filterArea\n#define iTime uTime\n#define fragColor gl_FragColor\n#define texture texture2D\n\nvoid main(void)\n{\n\tfloat aspect=iResolution.x/iResolution.y;\n\t\n\tvec2 uv=vTextureCoord*filterArea.xy*vec2(aspect,1.)/iResolution.xy;\n\t\n\tvec4 virtualMouse=vec4(uPosx,uPosy,uStartPosx,uStartPosy);\n\tfloat radius = uRadius;\n\tvec2 mouse=virtualMouse.xy*vec2(aspect,1.)/iResolution.xy;\n\tvec2 mouseDir=normalize(abs(virtualMouse.zw)-virtualMouse.xy);\n\tvec2 origin=clamp(mouse-mouseDir*mouse.x/mouseDir.x,0.,1.);\n\t\n\tfloat mouseDist=clamp(length(mouse-origin)+(aspect-(abs(virtualMouse.z)/iResolution.x)*aspect)/mouseDir.x,0.,aspect/mouseDir.x);\n\t\n\tif(mouseDir.x<0.)\n\t{\n\t\tmouseDist=distance(mouse,origin);\n\t}\n\t\n\tfloat proj=dot(uv-origin,mouseDir);\n\tfloat dist=proj-mouseDist;\n\t\n\tvec2 linePoint=uv-dist*mouseDir;\n\t\n\tif(dist>radius)\n\t{\n\t\t//下一页面\n\t\tfragColor=texture(nextPageTexture,uv*vec2(1./aspect,1.));\n\t\tfragColor.rgb*= clamp(min(1.0, .5 + 1. - uRadius/.04), 1.0, pow(clamp((dist-radius)*4.0,0.,1.),.2));\n\t}\n\telse if(dist>=0.)\n\t{\n\t\t// 圆柱面点映射\n\t\tfloat theta=asin(dist/radius);\n\t\tvec2 p2=linePoint+mouseDir*(pi-theta)*radius;\n\t\tvec2 p1=linePoint+mouseDir*theta*radius;\n\t\tif(p2.x<=aspect&&p2.y<=1.&&p2.x>0.&&p2.y>0.){\n\t\t\tuv = p2;\n\t\t\t//背面页 圆柱面\n\t\t\tuv = (1.0 - uv*vec2(1./aspect,1.));\n\t\t\tuv.y = 1.0 - uv.y;\n\t\t\tfragColor = texture(nextPageTexture, uv);\n\t\t\tfragColor.rgb*=clamp(min(1.0, .6 + 1. - uRadius/.04), 1.0, pow(clamp((radius-dist)/radius,0.,1.), .5));\n\t\t\tfragColor.a = 1.;\n\t\t}else{\n\t\t\t//corer 圆角\n\t\t\tuv = p1;\n\t\t\tfragColor = texture(uSampler, uv * vec2(1. / aspect, 1.));\n\t\t\tfragColor.rgb*=clamp(.95, 1.0, pow(clamp((radius-dist)/radius,0.,1.),1.));\n\t\t}\n\t}\n\telse\n\t{\n\t\tvec2 p=linePoint+mouseDir*(abs(dist)+pi*radius);\n\t\tif(p.x<=aspect&&p.y<=1.&&p.x>0.&&p.y>0.&&length(mouseDir)>0.){\n\t\t\tuv = p ;\n\t\t\t// 背面页平面区域\n\t\t\tuv = (1.0 - uv*vec2(1./aspect,1.));\n\t\t\tuv.y = 1.0 - uv.y;\n\t\t\tfragColor=texture(nextPageTexture,uv);\n\t\t\tfragColor.a = 1.;\n\t\t}else{\n\t\t\t// 正面页面\n\t\t\tfragColor=texture(uSampler,uv*vec2(1./aspect,1.));\n\t\t}\n\t\t\n\t}\n}",T=function(e){function n(t,n,o,i,r,a){void 0===t&&(t=0),void 0===n&&(n=0),void 0===o&&(o=0),void 0===i&&(i=0),void 0===a&&(a=.04),e.call(this,b,C),this.posx=t,this.posy=n,this._size=0,this._sliceSize=0,this._slicePixelSize=0,this._sliceInnerSize=0,this._scaleMode=null,this.radius=a,this.startPosx=o,this.startPosy=i,this.nextPageTexture=r}e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n;var o={posx:{configurable:!0},radius:{configurable:!0},posy:{configurable:!0},startPosx:{configurable:!0},startPosy:{configurable:!0},nextPageTexture:{configurable:!0}};return n.prototype.apply=function(t,e,n,o){this.uniforms.uPosx=this.posx<=0?0:this.posx,this.uniforms.uPosy=this.posy<=0?0:this.posy,this.uniforms.uRadius=this.radius,this.uniforms.uStartPosx=this.startPosx<=0?0:this.startPosx,this.uniforms.uStartPosy=this.startPosy<=0?0:this.startPosy,t.applyFilter(this,e,n,o)},o.posx.get=function(){return this.uniforms.uPosx},o.posx.set=function(t){this.uniforms.uPosx=t},o.radius.get=function(){return this.uniforms.uRadius},o.radius.set=function(t){this.uniforms.uRadius=Math.max(Math.min(t,.04),.01)},o.posy.get=function(){return this.uniforms.uPosy},o.posy.set=function(t){this.uniforms.uPosy=t},o.startPosx.get=function(){return this.uniforms.uStartPosx},o.startPosx.set=function(t){this.uniforms.uStartPosx=t},o.startPosy.get=function(){return this.uniforms.uStartPosy},o.startPosy.set=function(t){this.uniforms.uStartPosy=t},o.nextPageTexture.get=function(){return this._nextPageTexture},o.nextPageTexture.set=function(e){e instanceof t.Texture||(e=t.Texture.from(e)),e&&e.baseTexture&&(e.baseTexture.scaleMode=this._scaleMode,e.baseTexture.mipmap=!1,this._size=e.height,this._sliceSize=1/this._size,this._slicePixelSize=this._sliceSize/this._size,this._sliceInnerSize=this._slicePixelSize*(this._size-1),this.uniforms._size=this._size,this.uniforms._sliceSize=this._sliceSize,this.uniforms._slicePixelSize=this._slicePixelSize,this.uniforms._sliceInnerSize=this._sliceInnerSize,this.uniforms.nextPageTexture=e),this._nextPageTexture=e},n.prototype.updateNextPageTexture=function(){var t=this._nextPageTexture;t&&t.baseTexture&&(t._updateID++,t.baseTexture.emit("update",t.baseTexture),this.nextPageTexture=t)},n.prototype.destroy=function(t){this._nextPageTexture&&this._nextPageTexture.destroy(t),e.prototype.destroy.call(this)},Object.defineProperties(n.prototype,o),n}(t.Filter),_="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",P="\nvarying vec2 vTextureCoord;//passed from vect shader \n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uHeight;\nuniform float uWidth;\nuniform float uStrength;\nuniform float uTime;\n\n#define iResolution filterArea\n#define iTime uTime\n#define texture texture2D\n\n//模拟汽油燃烧\n// Description : Array and textureless GLSL 2D/3D/4D simplex \n//\t\t\t\t\t\t\t noise functions.\n//\t\t\tAuthor : Ian McEwan, Ashima Arts.\n//\tMaintainer : ijm\n//\t\t Lastmod : 20110822 (ijm)\n//\t\t License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//\t\t\t\t\t\t\t Distributed under the MIT License. See LICENSE file.\n//\t\t\t\t\t\t\t https://github.com/ashima/webgl-noise\n// \n\nvec3 mod289(vec3 x){\n\treturn x-floor(x*(1./289.))*289.;\n}\n\nvec4 mod289(vec4 x){\n\treturn x-floor(x*(1./289.))*289.;\n}\n\nvec4 permute(vec4 x){\n\treturn mod289(((x*34.)+1.)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n\treturn 1.79284291400159-.85373472095314*r;\n}\n\nfloat snoise(vec3 v)\n{\n\tconst vec2 C=vec2(1./6.,1./3.);\n\tconst vec4 D=vec4(0.,.5,1.,2.);\n\t\n\t// First corner\n\tvec3 i=floor(v+dot(v,C.yyy));\n\tvec3 x0=v-i+dot(i,C.xxx);\n\t\n\t// Other corners\n\tvec3 g=step(x0.yzx,x0.xyz);\n\tvec3 l=1.-g;\n\tvec3 i1=min(g.xyz,l.zxy);\n\tvec3 i2=max(g.xyz,l.zxy);\n\t\n\t//\t x0 = x0 - 0.0 + 0.0 * C.xxx;\n\t//\t x1 = x0 - i1\t+ 1.0 * C.xxx;\n\t//\t x2 = x0 - i2\t+ 2.0 * C.xxx;\n\t//\t x3 = x0 - 1.0 + 3.0 * C.xxx;\n\tvec3 x1=x0-i1+C.xxx;\n\tvec3 x2=x0-i2+C.yyy;// 2.0*C.x = 1/3 = C.y\n\tvec3 x3=x0-D.yyy;// -1.0+3.0*C.x = -0.5 = -D.y\n\t\n\t// Permutations\n\ti=mod289(i);\n\tvec4 p=permute(permute(permute(i.z+vec4(0.,i1.z,i2.z,1.))+i.y+vec4(0.,i1.y,i2.y,1.))+i.x+vec4(0.,i1.x,i2.x,1.));\n\t\n\t// Gradients: 7x7 points over a square, mapped onto an octahedron.\n\t// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n\tfloat n_=.142857142857;// 1.0/7.0\n\tvec3 ns=n_*D.wyz-D.xzx;\n\t\n\tvec4 j=p-49.*floor(p*ns.z*ns.z);//\tmod(p,7*7)\n\t\n\tvec4 x_=floor(j*ns.z);\n\tvec4 y_=floor(j-7.*x_);// mod(j,N)\n\t\n\tvec4 x=x_*ns.x+ns.yyyy;\n\tvec4 y=y_*ns.x+ns.yyyy;\n\tvec4 h=1.-abs(x)-abs(y);\n\t\n\tvec4 b0=vec4(x.xy,y.xy);\n\tvec4 b1=vec4(x.zw,y.zw);\n\t\n\t//vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n\t//vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n\tvec4 s0=floor(b0)*2.+1.;\n\tvec4 s1=floor(b1)*2.+1.;\n\tvec4 sh=-step(h,vec4(0.));\n\t\n\tvec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n\tvec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n\t\n\tvec3 p0=vec3(a0.xy,h.x);\n\tvec3 p1=vec3(a0.zw,h.y);\n\tvec3 p2=vec3(a1.xy,h.z);\n\tvec3 p3=vec3(a1.zw,h.w);\n\t\n\t//Normalise gradients\n\t//vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n\tvec4 norm=inversesqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n\tp0*=norm.x;\n\tp1*=norm.y;\n\tp2*=norm.z;\n\tp3*=norm.w;\n\t\n\t// Mix final noise value\n\tvec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n\tm=m*m;\n\treturn 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));\n}\n\n//////////////////////////////////////////////////////////////\n\n// PRNG\n// From https://www.shadertoy.com/view/4djSRW\nfloat prng(in vec2 seed){\n\tseed=fract(seed*vec2(5.3983,5.4427));\n\tseed+=dot(seed.yx,seed.xy+vec2(21.5351,14.3137));\n\treturn fract(seed.x*seed.y*95.4337);\n}\n\n//////////////////////////////////////////////////////////////\n\nfloat PI=3.1415926535897932384626433832795;\n\nfloat noiseStack(vec3 pos,int octaves,float falloff){\n\tfloat noise=snoise(vec3(pos));\n\tfloat off=1.;\n\tif(octaves>1){\n\t\tpos*=2.;\n\t\toff*=falloff;\n\t\tnoise=(1.-off)*noise+off*snoise(vec3(pos));\n\t}\n\tif(octaves>2){\n\t\tpos*=2.;\n\t\toff*=falloff;\n\t\tnoise=(1.-off)*noise+off*snoise(vec3(pos));\n\t}\n\tif(octaves>3){\n\t\tpos*=2.;\n\t\toff*=falloff;\n\t\tnoise=(1.-off)*noise+off*snoise(vec3(pos));\n\t}\n\treturn(1.+noise)/2.;\n}\n\nvec2 noiseStackUV(vec3 pos,int octaves,float falloff,float diff){\n\tfloat displaceA=noiseStack(pos,octaves,falloff);\n\tfloat displaceB=noiseStack(pos+vec3(3984.293,423.21,5235.19),octaves,falloff);\n\treturn vec2(displaceA,displaceB);\n}\n\nvoid main(){\n\tfloat time=iTime;\n\tvec2 resolution=iResolution.xy;\n\tvec2 fragCoord=vTextureCoord*filterArea.xy;\n\tvec2 offset=vec2(0.);\n\t//\n\tfloat xpart=fragCoord.x/resolution.x;\n\tfloat ypart=fragCoord.y/resolution.y;\n\t//\n\tfloat clip=uHeight;\n\tfloat ypartClip=1.0 - fragCoord.y/clip;//开始Y方向\n\tfloat ypartClippedFalloff=clamp(2.-ypartClip,0.,1.);//【0-1】\n\tfloat ypartClipped=min(ypartClip,1.);\n\tfloat ypartClippedn=1.-ypartClipped;\n\t//X方向油量\n\tfloat xfuel=pow(1.-abs(2.*xpart-1.),(1.0 - (uWidth/resolution.x))*5.0);\n\t//\n\tfloat timeSpeed=.5;\n\tfloat realTime=timeSpeed*time;\n\t//\n\tvec2 coordScaled=.01*fragCoord-.02*vec2(offset.x,0.);\n\tvec3 position=vec3(coordScaled,0.)+vec3(1223.,6434.,8425.);\n\tvec3 flow=vec3(4.1*(.5-xpart)*pow(ypartClippedn,4.),-2.*xfuel*pow(ypartClippedn,64.),0.);\n\tvec3 timing=realTime*vec3(0.,1.7,1.1)+flow;\n\t//\n\tvec3 displacePos=vec3(1.,.5,1.)*2.4*position+realTime*vec3(.01,.7,1.3);\n\tvec3 displace3=vec3(noiseStackUV(displacePos,2,.4,.1),0.);\n\t//\n\tvec3 noiseCoord=(vec3(2.,1.,1.)*position+timing+.4*displace3)/1.;\n\tfloat noise=noiseStack(noiseCoord,3,.4);\n\t//\n\tfloat flames=pow(ypartClipped,.3*xfuel)*pow(noise,.3*xfuel);\n\t//\n\tfloat f=ypartClippedFalloff*pow(1.-flames*flames*flames,8.);\n\tfloat fff=f*f*f;\n\tvec3 fire=uStrength*vec3(f,fff,fff*fff);\n\t\n\t// smoke\n\tfloat smokeNoise=.5+snoise(.4*position+timing*vec3(1.,1.,.2))/2.;\n\tvec3 smoke=vec3(.3*pow(xfuel,3.)*pow(ypart,2.)*(smokeNoise+.4*(1.-noise)));\n\t\n\t// sparks\n\tfloat sparkGridSize=30.*uStrength;\n\tvec2 sparkCoord=0.0 - fragCoord-vec2(2.*offset.x,190.*realTime);\n\tsparkCoord-=30.*noiseStackUV(.01*vec3(sparkCoord,30.*time),1,.4,.1);\n\tsparkCoord+=100.*flow.xy;\n\tif(mod(sparkCoord.y/sparkGridSize,2.)<1.)sparkCoord.x+=.5*sparkGridSize;\n\tvec2 sparkGridIndex=vec2(floor(sparkCoord/sparkGridSize));\n\tfloat sparkRandom=prng(sparkGridIndex);\n\tfloat sparkLife=min(10.*(1.-min((sparkGridIndex.y+(190.*realTime/sparkGridSize))/(24.-20.*sparkRandom),1.)),1.);\n\tvec3 sparks=vec3(0.);\n\tif(sparkLife>0.){\n\t\tfloat sparkSize=xfuel*xfuel*sparkRandom*.08;\n\t\tfloat sparkRadians=999.*sparkRandom*2.*PI+2.*time;\n\t\tvec2 sparkCircular=vec2(sin(sparkRadians),cos(sparkRadians));\n\t\tvec2 sparkOffset=(.5-sparkSize)*sparkGridSize*sparkCircular;\n\t\tvec2 sparkModulus=mod(sparkCoord+sparkOffset,sparkGridSize)-.5*vec2(sparkGridSize);\n\t\tfloat sparkLength=length(sparkModulus);\n\t\tfloat sparksGray=max(0.,1.-sparkLength/(sparkSize*sparkGridSize));\n\t\tsparks=sparkLife*sparksGray*vec3(0.9686, 0.0, 0.0);\n\t}\n\t//\n\tvec4 effect = vec4(max(fire,sparks)+smoke,1.);\n\tgl_FragColor = effect + texture2D(uSampler, vTextureCoord);\n}",S=function(t){function e(e,n,o,i){void 0===e&&(e=0),void 0===n&&(n=0),void 0===o&&(o=2),void 0===i&&(i=0),t.call(this,_,P),this.height=e,this.width=n,this.strength=o,this.delta=i}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={width:{configurable:!0},height:{configurable:!0},strength:{configurable:!0},delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uWidth=this.width,this.uniforms.uHeight=this.height,this.uniforms.uStrength=this.strength,this.uniforms.uTime=this.delta,t.applyFilter(this,e,n,o)},n.width.get=function(){return this.uniforms.uWidth},n.width.set=function(t){this.uniforms.uWidth=t},n.height.get=function(){return this.uniforms.uHeight},n.height.set=function(t){this.uniforms.uHeight=t},n.strength.get=function(){return this.uniforms.uStrength},n.strength.set=function(t){this.uniforms.uStrength=t},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),z="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",w="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform sampler2D uSampler;// 2d texture2D\nuniform vec4 filterArea;\n\nuniform int uInvertColor;\nuniform float uTime;\n\nfloat rand(float x)\n{\n    return fract(sin(x)*43758.5453);\n}\n\nfloat triangle(float x)\n{\n    return abs(1.-mod(abs(x),2.))*2.-1.;\n}\n\nvoid main()\n{\n    float time=floor(uTime*16.)/16.;\n    \n    vec2 uv=vTextureCoord;\n    \n    // pixel position\n    vec2 p=uv;\n    p+=vec2(triangle(p.y*rand(time)*4.)*rand(time*1.9)*.015,\n    triangle(p.x*rand(time*3.4)*4.)*rand(time*2.1)*.015);\n    p+=vec2(rand(p.x*3.1+p.y*8.7)*.01,\n    rand(p.x*1.1+p.y*6.7)*.01);\n    \n    // vec2 blurredUV = vec2(p.x+0.003,p.y+0.003);\n    // vec4 baseColor = vec4(texture(iChannel0, blurredUV).rgb,1.);\n\n    vec4 baseColor=vec4(texture2D(uSampler,uv).rgb,1.);\n    vec4 edges=1.-(baseColor/vec4(texture2D(uSampler,p).rgb,1.));\n    \n    if(uInvertColor>0){\n        baseColor.rgb=vec3(baseColor.r);\n        gl_FragColor=baseColor/vec4(length(edges));\n    }else{\n        gl_FragColor=vec4(length(edges));\n    }\n}",A=function(t){function e(e,n){void 0===e&&(e=!1),void 0===n&&(n=0),t.call(this,z,w),this._invertColor=e,this.invertColor=e,this.delta=n}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={invertColor:{configurable:!0},delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uInvertColor=this.invertColor?1:0,this.uniforms.uTime=this.delta,t.applyFilter(this,e,n,o)},n.invertColor.get=function(){return this._invertColor},n.invertColor.set=function(t){this._invertColor=t,this.uniforms.uInvertColor=t?1:0},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),F="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",D="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform sampler2D uSampler; // 2d texture2D\nuniform vec4 filterArea;\n\nuniform float uTime;\n\n//噪音简化算法，效率高\n// Description : Array and textureless GLSL 2D simplex snoise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-snoise\n//               https://github.com/stegu/webgl-snoise\n// \n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final snoise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nfloat onOff(float a, float b, float c)\n{\n\treturn step(c, sin(uTime + a*cos(uTime*b)));\n}\n\nfloat ramp(float y, float start, float end)\n{\n\tfloat inside = step(start,y) - step(end,y);\n\tfloat fact = (y-start)/(end-start)*inside;\n\treturn (1.-fact) * inside;\n\t\n}\n\nfloat stripes(vec2 uv)\n{\n\tfloat noi = snoise(uv*vec2(0.5,1.) + vec2(1.,3.));\n\treturn ramp(mod(uv.y*4. + uTime/2.+sin(uTime + sin(uTime*0.63)),1.),0.5,0.6)*noi;\n}\n\nvec3 getVideo(vec2 uv)\n{\n\tvec2 look = uv;\n\tfloat window = 1./(1.+20.*(look.y-mod(uTime/4.,1.))*(look.y-mod(uTime/4.,1.)));\n\tlook.x = look.x + sin(look.y*10. + uTime)/50.*onOff(4.,4.,.3)*(1.+cos(uTime*80.))*window;\n\tfloat vShift = 0.4*onOff(2.,3.,.9)*(sin(uTime)*sin(uTime*20.) + (0.5 + 0.1*sin(uTime*200.)*cos(uTime)));\n\tlook.y = mod(look.y + vShift, 1.);\n\tvec3 video = vec3(texture2D(uSampler,look));\n\treturn video;\n}\n\nvec2 screenDistort(vec2 uv)\n{\n\tuv -= vec2(.5,.5);\n\tuv = uv*1.2*(1./1.2+2.*uv.x*uv.x*uv.y*uv.y);\n\tuv += vec2(.5,.5);\n\treturn uv;\n}\n\nvoid main(void)\n{\n\tvec2 uv = vTextureCoord;\n\tuv = screenDistort(uv);\n\tvec3 video = getVideo(uv);\n\tfloat vigAmt = 3.+.3*sin(uTime + 5.*cos(uTime*5.));\n\tfloat vignette = (1.-vigAmt*(uv.y-.5)*(uv.y-.5))*(1.-vigAmt*(uv.x-.5)*(uv.x-.5));\n\t\n\tvideo += stripes(uv);\n\tvideo += snoise(uv*2.)/2.;\n\tvideo *= vignette;\n\tvideo *= (12.+mod(uv.y*30.+uTime,1.))/13.;\n\t\n\tgl_FragColor = vec4(video,1.0);\n}",j=function(t){function e(e){void 0===e&&(e=0),t.call(this,F,D),this.delta=e}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uTime=this.delta<=0?2:this.delta,t.applyFilter(this,e,n,o)},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),k="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",M="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uPosx;\nuniform float uPosy;\nuniform float uStrength;\nuniform float uTime;\n//////////////////////\n// Fire Flame shader\n\n// procedural noise from IQ\nvec2 hash(vec2 p)\n{\n\tp=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3)));\n\treturn-1.+2.*fract(sin(p)*43758.5453123);\n}\n\nfloat noise(in vec2 p)\n{\n\tconst float K1=.366025404;// (sqrt(3)-1)/2;\n\tconst float K2=.211324865;// (3-sqrt(3))/6;\n\t\n\tvec2 i=floor(p+(p.x+p.y)*K1);\n\t\n\tvec2 a=p-i+(i.x+i.y)*K2;\n\tvec2 o=(a.x>a.y)?vec2(1.,0.):vec2(0.,1.);\n\tvec2 b=a-o+K2;\n\tvec2 c=a-1.+2.*K2;\n\t\n\tvec3 h=max(.5-vec3(dot(a,a),dot(b,b),dot(c,c)),0.);\n\t\n\tvec3 n=h*h*h*h*vec3(dot(a,hash(i+0.)),dot(b,hash(i+o)),dot(c,hash(i+1.)));\n\t\n\treturn dot(n,vec3(70.));\n}\n\nfloat fbm(vec2 uv)\n{\n\tfloat f;\n\tmat2 m=mat2(1.6,1.2,-1.2,1.6);\n\tf=.5000*noise(uv);uv=m*uv;\n\tf+=.2500*noise(uv);uv=m*uv;\n\tf+=.1250*noise(uv);uv=m*uv;\n\tf+=.0625*noise(uv);uv=m*uv;\n\tf=.5+.5*f;\n\treturn f;\n}\n\nvoid main()\n{\n\tvec2 fragCoord=vTextureCoord*filterArea.xy;\n\tvec2 uv=fragCoord.xy/filterArea.xy;\n\tvec2 q=uv;\n\tq.y = 1.0 - q.y;\n\tfloat strength=uStrength;\n\tfloat T3=max(3.,1.25*strength)*uTime;\n\tq.x-=uPosx/filterArea.x;\n\tq.y-=uPosy/filterArea.y;\n\tfloat n=fbm(strength*q-vec2(0,T3));\n\tfloat c=1.-26.*pow(max(0.,length(q*vec2(1.8+q.y*1.5,.75))-n*max(0.,q.y+.25)),1.2);\n\tfloat c1=n*c*(1.5-pow(1.50*(1.0 - uv.y),1.2));\n\tc1=clamp(c1,0.,1.);\n\t\n\tvec3 col=vec3(1.5*c1,1.5*c1*c1*c1,c1*c1*c1*c1*c1*c1);\n\t\n\tfloat a=c*(1.-pow(uv.y,3.));\n\tgl_FragColor=vec4(mix(vec3(0.),col,a),1.)+texture2D(uSampler,vTextureCoord);\n}",R=function(t){function e(e,n,o,i){void 0===e&&(e=10),void 0===n&&(n=10),void 0===o&&(o=2),void 0===i&&(i=0),t.call(this,k,M),this.posx=e,this.posy=n,this.strength=o,this.delta=i}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={posx:{configurable:!0},posy:{configurable:!0},strength:{configurable:!0},delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uPosx=this.posx<=0?10:this.posx,this.uniforms.uPosy=this.posy<=0?10:this.posy,this.uniforms.uStrength=this.strength,this.uniforms.uTime=this.delta<=0?2:this.delta,t.applyFilter(this,e,n,o)},n.posx.get=function(){return this.uniforms.uPosx},n.posx.set=function(t){this.uniforms.uPosx=t},n.posy.get=function(){return this.uniforms.uPosy},n.posy.set=function(t){this.uniforms.uPosy=t},n.strength.get=function(){return this.uniforms.uStrength},n.strength.set=function(t){this.uniforms.uStrength=t},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),O="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",I="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uPosx;\nuniform float uPosy;\nuniform float uTime;\n\nvoid main(){\n\tvec2 fragCoord=vTextureCoord*filterArea.xy;\n\tvec2 uv=fragCoord.xy/filterArea.xy;\n\tconst float resolution=160.;//步长\n\tuv=floor(uv*resolution)/resolution;// 0 or 1\n\t\n\tvec3 color=texture2D(uSampler,uv).rgb;\n\t\n\tfloat intensity=(color.r+color.g+color.b)/3.;\n\tint index=int(intensity*4.);\n\n\tint r = index+0;\n\tint g = index+1;\n\tint b = index+2;\n\tif(index == 0){\n\t\tgl_FragColor=vec4(vec3(15./255., 56./255., 15./255.),1.);\n\t}else if(index == 1){\n\t\tgl_FragColor=vec4(vec3(48./255., 98./255., 48./255.),1.);\n\t}else if(index == 2){\n\t\tgl_FragColor=vec4(vec3(139./255., 172./255., 15./255.),1.);\n\t}else{\n\t\tgl_FragColor=vec4(vec3(155./255., 188./255., 15./255.),1.);\n\t}\n}",V=function(t){function e(){t.call(this,O,I)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.apply=function(t,e,n,o){t.applyFilter(this,e,n,o)},e}(t.Filter),q="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",L="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform int uBlizard;\nuniform float uTime;\n\nconst mat3 p=mat3(13.323122,23.5112,21.71123,21.1212,28.7312,11.9312,21.8112,14.7212,61.3934);\n\t\nvec3 createSnow(int i,float depth,float width,float speed,float dof,vec2 uv){\n\tfloat fi=float(i);\n\tvec2 q=uv*(1.+fi*depth);\n\tq+=vec2(q.y*(width*mod(fi*7.238917,1.)-width*.5),speed*uTime/(1.+fi*depth*.03));\n\tvec3 n=vec3(floor(q),31.189+fi);\n\tvec3 m=floor(n)*.00001+fract(n);\n\tvec3 mp=(31415.9+m)/fract(p*m);\n\tvec3 r=fract(mp);\n\tvec2 s=abs(mod(q,1.)-.5+.9*r.xy-.45);\n\ts+=.01*abs(2.*fract(10.*q.yx)-1.);\n\tfloat d=.6*max(s.x-s.y,s.x+s.y)+max(s.x,s.y)-.01;\n\tfloat edge=.005+.05*min(.5*abs(fi-5.-dof),1.);\n\treturn vec3(smoothstep(edge,-edge,d)*(r.x/(1.+.02*fi*depth)));\n}\n\nvoid main()\n{\n\tvec2 fragCoord=vTextureCoord*filterArea.xy;\n\tvec2 uv=vec2(1.,filterArea.y/filterArea.x)*fragCoord.xy/filterArea.xy;\n\tvec3 acc=vec3(0.);\n\tfloat dof=5.*sin(uTime*.1);\n\tif(uBlizard==1){\n\t\tfor(int i=0;i<100;i++){\n\t\t\tacc+=createSnow(i,.1,.8,-1.5,dof,uv);\n\t\t}\n\t}else{\n\t\tfor(int i=0;i<50;i++){\n\t\t\tacc+=createSnow(i,.5,.3,-.6,dof,uv);\n\t\t}\n\t}\n\tgl_FragColor=vec4(vec3(acc),1.) + texture2D(uSampler, vTextureCoord);\n}",H=function(t){function e(e,n){void 0===e&&(e=!1),void 0===n&&(n=0),t.call(this,q,L),this._blizard=e,this.blizard=this._blizard,this.delta=n}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={blizard:{configurable:!0},delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uBlizard=this._blizard?1:0,this.uniforms.uTime=this.delta<=0?2:this.delta,t.applyFilter(this,e,n,o)},n.blizard.get=function(){return this._blizard},n.blizard.set=function(t){this._blizard=t,this.uniforms.uBlizard=t?1:0},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),U="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",E="varying vec2 vTextureCoord;//passed from vect shader\n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uTime;\n\nvoid main()\n{\n\t\n\tvec2 uv=vTextureCoord;\n\tuv.x *=2.;\n\tfloat col=sin(uv.y+uv.x*3.-uTime*6.)*.9;\n\tcol*=col*col*.6;\n\n\tcol= clamp(col,0.,1.);\n\t\n\tvec4 tex=texture2D(uSampler,vTextureCoord);\n\tif(tex.a < .05){\n\t\tdiscard;\n\t}\n\tgl_FragColor=tex+vec4(col,col,col,tex.a);\n}",G=function(t){function e(e){void 0===e&&(e=0),t.call(this,U,E),this.delta=e}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uTime=this.delta<=0?2:this.delta,t.applyFilter(this,e,n,o)},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),W="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",B="varying vec2 vTextureCoord;//passed from vect shader\n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nvoid main(void)\n{\n\tvec2 uv;\n\tuv.x=vTextureCoord.x;\n\tuv.y=1.-vTextureCoord.y;\n\t\n\tgl_FragColor=texture2D(uSampler,uv)*uv.y;\n}",X=function(t){function e(){t.call(this,W,B)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.apply=function(t,e,n,o){t.applyFilter(this,e,n,o)},e}(t.Filter),N="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",Y="varying vec2 vTextureCoord;//passed from vect shader\n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uTime;\n\nvoid main()\n{\n    vec2 uv=vTextureCoord;\n    uv.y = 1.- vTextureCoord.y;\n    vec4 waterColor=vec4(1.);\n    float reflactionY=.3;\n    if(uv.y<=reflactionY)\n    {\n        float oy=uv.y;\n        uv.y=2.*reflactionY-uv.y;\n        uv.y=uv.y+sin(1./(oy-reflactionY)+uTime*10.)*.003;\n        waterColor=vec4(.5882,.7529,.9216,1.);\n    }\n    \n    gl_FragColor=texture2D(uSampler,uv)*waterColor;\n}\n",K=function(t){function e(e){void 0===e&&(e=0),t.call(this,N,Y),this.delta=e}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uTime=this.delta<=0?2:this.delta,t.applyFilter(this,e,n,o)},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),Q="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",Z="varying vec2 vTextureCoord;//passed from vect shader\n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uTime;\n\nfloat rand(vec2 p){\n\tp+=.2127+p.x+.3713*p.y;\n\tvec2 r=4.789*sin(789.123*(p));\n\treturn fract(r.x*r.y);\n}\n//sample noise\nfloat sn(vec2 p){\n\tvec2 i=floor(p-.5);\n\tvec2 f=fract(p-.5);\n\tf=f*f*f*(f*(f*6.-15.)+10.);\n\tfloat rt=mix(rand(i),rand(i+vec2(1.,0.)),f.x);\n\tfloat rb=mix(rand(i+vec2(0.,1.)),rand(i+vec2(1.,1.)),f.x);\n\treturn mix(rt,rb,f.y);\n}\n\nvoid main(void)\n{\n\tvec2 uv=vTextureCoord;\n\tuv.y = 1.0 - uv.y;\n\tvec2 newUV=uv;\n\tnewUV.x-=uTime*.3;\n\tnewUV.y+=uTime*3.;\n\tfloat strength=sin(uTime*.5+sn(newUV))*.1+.2;\n\tfloat rain=sn(vec2(newUV.x*20.1,newUV.y*40.1+newUV.x*400.1-20.*strength));\n\tfloat rain2=sn(vec2(newUV.x*45.+uTime*.5,newUV.y*30.1+newUV.x*100.1));\n\train=strength-rain;\n\train+=rain2*(sin(strength)-.4)*2.;\n\train=clamp(rain,0.,.5)*.8;\n\t\n\tgl_FragColor=vec4(vec3(rain),1.)+texture2D(uSampler,vTextureCoord);\n}",J=function(t){function e(e){void 0===e&&(e=0),t.call(this,Q,Z),this.delta=e}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uTime=this.delta<=0?2:this.delta,t.applyFilter(this,e,n,o)},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),$="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",tt="varying vec2 vTextureCoord;//passed from vect shader\n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uPosx;\nuniform float uPosy;\nuniform float uTime;\n\nvec3 mod289(vec3 x){return x-floor(x*(1./289.))*289.;}\nvec4 mod289(vec4 x){\n\treturn x-floor(x*(1./289.))*289.;\n}\nvec4 permute(vec4 x){\n\treturn mod289(((x*34.)+1.)*x);\n}\nvec4 taylorInvSqrt(vec4 r){\n\treturn 1.79284291400159-.85373472095314*r;\n}\nvec3 fade(vec3 t){\n\treturn t*t*t*(t*(t*6.-15.)+10.);\n}\nfloat noise(vec3 P){\n\tvec3 i0=mod289(floor(P)),i1=mod289(i0+vec3(1.)),\n\tf0=fract(P),f1=f0-vec3(1.),f=fade(f0);\n\tvec4 ix=vec4(i0.x,i1.x,i0.x,i1.x),iy=vec4(i0.yy,i1.yy),\n\tiz0=i0.zzzz,iz1=i1.zzzz,\n\tixy=permute(permute(ix)+iy),ixy0=permute(ixy+iz0),ixy1=permute(ixy+iz1),\n\tgx0=ixy0*(1./7.),gy0=fract(floor(gx0)*(1./7.))-.5,\n\tgx1=ixy1*(1./7.),gy1=fract(floor(gx1)*(1./7.))-.5;\n\tgx0=fract(gx0);gx1=fract(gx1);\n\tvec4 gz0=vec4(.5)-abs(gx0)-abs(gy0),sz0=step(gz0,vec4(0.)),\n\tgz1=vec4(.5)-abs(gx1)-abs(gy1),sz1=step(gz1,vec4(0.));\n\tgx0-=sz0*(step(0.,gx0)-.5);gy0-=sz0*(step(0.,gy0)-.5);\n\tgx1-=sz1*(step(0.,gx1)-.5);gy1-=sz1*(step(0.,gy1)-.5);\n\tvec3 g0=vec3(gx0.x,gy0.x,gz0.x),g1=vec3(gx0.y,gy0.y,gz0.y),\n\tg2=vec3(gx0.z,gy0.z,gz0.z),g3=vec3(gx0.w,gy0.w,gz0.w),\n\tg4=vec3(gx1.x,gy1.x,gz1.x),g5=vec3(gx1.y,gy1.y,gz1.y),\n\tg6=vec3(gx1.z,gy1.z,gz1.z),g7=vec3(gx1.w,gy1.w,gz1.w);\n\tvec4 norm0=taylorInvSqrt(vec4(dot(g0,g0),dot(g2,g2),dot(g1,g1),dot(g3,g3))),\n\tnorm1=taylorInvSqrt(vec4(dot(g4,g4),dot(g6,g6),dot(g5,g5),dot(g7,g7)));\n\tg0*=norm0.x;g2*=norm0.y;g1*=norm0.z;g3*=norm0.w;\n\tg4*=norm1.x;g6*=norm1.y;g5*=norm1.z;g7*=norm1.w;\n\tvec4 nz=mix(vec4(dot(g0,vec3(f0.x,f0.y,f0.z)),dot(g1,vec3(f1.x,f0.y,f0.z)),\n\tdot(g2,vec3(f0.x,f1.y,f0.z)),dot(g3,vec3(f1.x,f1.y,f0.z))),\n\tvec4(dot(g4,vec3(f0.x,f0.y,f1.z)),dot(g5,vec3(f1.x,f0.y,f1.z)),\n\tdot(g6,vec3(f0.x,f1.y,f1.z)),dot(g7,vec3(f1.x,f1.y,f1.z))),f.z);\n\treturn 2.2*mix(mix(nz.x,nz.z,f.y),mix(nz.y,nz.w,f.y),f.x);\n}\n\nvoid main()\n{\n\t// Normalized pixel coordinates (from 0 to 1) and center pos\n\tvec2 uv=vTextureCoord;\n\tuv.y = 1.0 - uv.y;\n\tuv = uv -.5;\n\n\tfloat c=0.;\n\t// BUILD A FRACTAL TEXTURE USING\n\t// NOISE THAT ANIMATES THROUGH Z\n\tfloat x=uv.x+uTime*.2;\n\tfloat y=uv.y;\n\n\tfor(int n=1;n<=5;n++){\n\t\tfloat z=float(n);\n\t\tvec3 p=vec3(x,y,z+.05*uTime);\n\t\tfloat frequency=pow(2.,z);\n\t\tc+=(noise(frequency*p)/frequency);\n\t}\n\t\n\t// CLOUDS SHOT WITH COLOR\n\tvec3 sky=vec3(.1,.3,.9);\n\tvec3 white=vec3(1.0, 1.0, 1.0);\n\tvec3 pink=vec3(0.8549, 0.7569, 0.7569);\n\tvec3 cloud=mix(pink,white,c);\n\tc=clamp(c+y,0.,1.);\n\tvec3 color=mix(sky,cloud,c);\n\t\n\t// Output to screen\n\tgl_FragColor=vec4(sqrt(color),1.)+texture2D(uSampler, vTextureCoord);\n}",et=function(t){function e(e){void 0===e&&(e=0),t.call(this,$,tt),this.delta=e}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={delta:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uTime=this.delta<=0?2:this.delta,t.applyFilter(this,e,n,o)},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),nt="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",ot="varying vec2 vTextureCoord;//passed from vect shader\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uTime;\nuniform vec3 uColor;\n\nfloat rand(vec2 n){\n\treturn fract(sin(dot(n,vec2(12.9898,12.1414)))*83758.5453);\n}\n\nfloat noise(vec2 n){\n\tconst vec2 d=vec2(0.,1.);\n\tvec2 b=floor(n);\n\tvec2 f=mix(vec2(0.),vec2(1.),fract(n));\n\treturn mix(mix(rand(b),rand(b+d.yx),f.x),mix(rand(b+d.xy),rand(b+d.yy),f.x),f.y);\n}\n\nvec3 ramp(float t){\n\treturn t<=.5?vec3(1.-t*1.4,.2,1.05)/t:vec3(.3*(1.-t)*2.,.2,1.05)/t;\n}\n\nfloat fire(vec2 n){\n\treturn noise(n)+noise(n*2.1)*.6+noise(n*5.4)*.42;\n}\n\nvec3 getLine(vec3 col,vec2 fc,mat2 mtx,float shift){\n\tfloat t=uTime;\n\tvec2 uv=(fc/filterArea.xy)*mtx;\n\t\n\tuv.x+=uv.y<.5?23.+t*.35:-11.+t*.3;\n\tuv.y=abs(uv.y-shift);\n\tuv*=5.;\n\t\n\tfloat q=fire(uv-t*.013)/2.;\n\tvec2 r=vec2(fire(uv+q/2.+t-uv.x-uv.y),fire(uv+q-t));\n\tvec3 color=vec3(1./(pow(vec3(.5,0.,.1)+1.61,vec3(4.))));\n\t\n\tfloat grad=pow((r.y+r.y)*max(.0,uv.y)+.1,4.);\n\tcolor=ramp(grad);\n\tcolor/=(1.50+max(vec3(0),color));\n\t\n\tif(color.b<.00000005)\n\tcolor=vec3(.0);\n\t\n\treturn mix(col,color,color.b);\n}\n\nvoid main(){\n\tvec2 fragCoord=vTextureCoord.xy*filterArea.xy;\n\tvec2 uv=fragCoord/filterArea.xy;\n\tvec3 color=vec3(0.);\n\tcolor=getLine(color,fragCoord,mat2(1.,1.,0.,1.),1.02);\n\tcolor=getLine(color,fragCoord,mat2(1.,1.,1.,0.),1.02);\n\tcolor=getLine(color,fragCoord,mat2(1.,1.,0.,1.),-.02);\n\tcolor=getLine(color,fragCoord,mat2(1.,1.,1.,0.),-.02);\n\tgl_FragColor=vec4(vec3(color.b)*uColor,1.)+texture2D(uSampler,vTextureCoord);\n}",it=function(t){function e(e,n){void 0===e&&(e={r:1,g:0,b:0}),void 0===n&&(n=0),t.call(this,nt,ot),this.uniforms.uColor=new Float32Array(3),this._color={r:e.r,g:e.g,b:e.b},this.delta=n}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={delta:{configurable:!0},color:{configurable:!0}};return e.prototype.apply=function(t,e,n,o){this.uniforms.uColor[0]=this._color.r,this.uniforms.uColor[1]=this._color.g,this.uniforms.uColor[2]=this._color.b,this.uniforms.uTime=this.delta<=0?2:this.delta,t.applyFilter(this,e,n,o)},n.delta.get=function(){return this.uniforms.uTime},n.color.get=function(){return this._color},n.color.set=function(t){this._color=t,this.uniforms.uColor[0]=t.r,this.uniforms.uColor[1]=t.g,this.uniforms.uColor[2]=t.b},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(t.Filter),rt=Object.freeze({__proto__:null,AmoyVcrFilter:j,AmoyRainfallFilter:i,AmoyPixelVibrationFilter:l,AmoyLight2dFilter:d,AmoyLensHaloFilter:x,AmoyBrokenCamDistortionFilter:g,AmoyPageCurlFilter:T,AmoySparksDriftingFilter:S,AmoyWhiteBlackSketchFilter:A,AmoyMosaicFilter:s,AmoyFlameFilter:R,AmoyGameboyStyleFilter:V,AmoySnowFilter:H,AmoyLightSweepFilter:G,AmoyReflectionFilter:X,AmoyWaterReflectionFilter:K,AmoyWeatherRainyFilter:J,AmoyWeatherCloudFilter:et,AmoyInnerOutlineFilter:it}),at=e.utils.EventEmitter,st=function(t){function n(){var n=new dat.GUI;n.useLocalStorage=!1;var o=document.querySelector("#container"),i=o.offsetWidth,r=o.offsetHeight;t.call(this,{view:document.querySelector("#stage"),width:i,height:r,autoStart:!1,backgroundColor:0}),e.settings.PRECISION_FRAGMENT="highp",this.domElement=o,this.initWidth=i,this.initHeight=r,this.animating=!0,this.rendering=!0,this.events=new at,this.animateTimer=0,this.bg=null,this.pond=null,this.fishCount=20,this.fishes=[],this.fishFilters=[],this.pondFilters=[],this.filterArea=new e.Rectangle,this.padding=100,this.bounds=new e.Rectangle(-this.padding,-this.padding,i+2*this.padding,r+2*this.padding);var a=this;this.gui=n,this.gui.add(this,"rendering").name("&bull; Rendering").onChange(function(t){t?a.start():a.stop()}),this.gui.add(this,"animating").name("&bull; Animating")}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var o={resources:{configurable:!0}};return o.resources.get=function(){return this.loader.resources},n.prototype.load=function(t,e){var n=this;this.loader.add(t).load(function(){e(),n.init(),n.start()})},n.prototype.init=function(){var t=this.loader.resources,n=this.bounds,o=this.initWidth,i=this.initHeight;this.pond=new e.Container,this.pond.filterArea=this.filterArea,this.pond.filters=this.pondFilters,this.stage.addChild(this.pond),this.bg=new e.Sprite(t.background.texture),this.pond.addChild(this.bg);for(var r=0;r<this.fishCount;r++){var a="fish"+(r%4+1),s=new e.Sprite(t[a].texture);s.anchor.set(.5),s.filters=this.fishFilters,s.direction=Math.random()*Math.PI*2,s.speed=2+2*Math.random(),s.turnSpeed=Math.random()-.8,s.x=Math.random()*n.width,s.y=Math.random()*n.height,s.scale.set(.8+.3*Math.random()),this.pond.addChild(s),this.fishes.push(s)}this.overlay=new e.TilingSprite(t.overlay.texture,o,i),this.pond.addChild(this.overlay),window.addEventListener("resize",this.handleResize.bind(this)),this.handleResize(),this.ticker.add(this.animate,this)},n.prototype.handleResize=function(){var t=this.padding,e=this.bg,n=this.overlay,o=this.filterArea,i=this.bounds,r=this.domElement.offsetWidth,a=this.domElement.offsetHeight,s=e.texture.width/e.texture.height;r/a>s?(e.width=r,e.height=r/s):(e.height=a,e.width=a*s),e.x=(r-e.width)/2,e.y=(a-e.height)/2,n.width=r,n.height=a,i.x=-t,i.y=-t,i.width=r+2*t,i.height=a+2*t,o.x=0,o.y=0,o.width=r-0,o.height=a-0,this.events.emit("resize",r,a),this.renderer.resize(r,a),this.render()},n.prototype.animate=function(t){this.animateTimer+=t;var e=this.bounds,n=this.animateTimer,o=this.overlay;if(this.events.emit("animate",t,n),this.animating){o.tilePosition.x=-1*n,o.tilePosition.y=-1*n;for(var i=0;i<this.fishes.length;i++){var r=this.fishes[i];r.direction+=.01*r.turnSpeed,r.x+=Math.sin(r.direction)*r.speed,r.y+=Math.cos(r.direction)*r.speed,r.rotation=-r.direction-Math.PI/2,r.x<e.x&&(r.x+=e.width),r.x>e.x+e.width&&(r.x-=e.width),r.y<e.y&&(r.y+=e.height),r.y>e.y+e.height&&(r.y-=e.height)}}},n.prototype.addFilter=function(t,n){var o=this;"function"==typeof n&&(n={oncreate:n}),(n=Object.assign({name:t,enabled:!1,opened:!1,args:null,fishOnly:!1,global:!1,oncreate:null},n)).global&&(n.name+=" (pixi.js)");var i,r=this,a=this.gui.addFolder(n.name),s=rt[t]||e.filters[t];if(!s)throw'Unable to find class name with "'+t+'"';if(n.args){var u=function(t){s.apply(this,t)};u.prototype=s.prototype,i=new u(n.args)}else i=new s;return i.enabled=n.enabled,a.add(i,"enabled").onChange(function(t){r.events.emit("enable",t),o.render(),t?a.domElement.className+=" enabled":a.domElement.className=a.domElement.className.replace(" enabled","")}),n.opened&&a.open(),n.enabled&&(a.domElement.className+=" enabled"),n.oncreate&&n.oncreate.call(i,a),n.fishOnly?this.fishFilters.push(i):this.pondFilters.push(i),i},Object.defineProperties(n.prototype,o),n}(e.Application);var ut=Object.freeze({__proto__:null,rainfall:function(){var t=this;t.addFilter("AmoyRainfallFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(e){var n=this;t.events.on("animate",function(){n.uniforms.uTime+=.01}),e.add(this,"rainR",2,10)}})},mosaic:function(){this.addFilter("AmoyMosaicFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(t){t.add(this,"tileSize",32,64)}})},pixelVibration:function(){this.addFilter("AmoyPixelVibrationFilter",{enabled:!1,global:!1,opened:!1,fishOnly:!0,oncreate:function(t){t.add(this,"intensity",3,6),t.add(this,"blursize",2,6),t.add(this,"threshold",0,1)}})},light2d:function(){this.addFilter("AmoyLight2dFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(t){var e=document.querySelector("#container"),n=e.offsetWidth,o=e.offsetHeight;t.add(this,"posx",0,n),t.add(this,"posy",0,o)}})},lensHalo:function(){var t=this;t.addFilter("AmoyLensHaloFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(e){var n=this,o=document.querySelector("#container"),i=o.offsetWidth,r=o.offsetHeight;e.add(this,"posx",0,i),e.add(this,"posy",0,r),t.events.on("animate",function(){n.uniforms.uTime+=.01})}})},broken_cam_distortion:function(){var t=this;t.addFilter("AmoyBrokenCamDistortionFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(e){var n=this;t.events.on("animate",function(){n.uniforms.uTime+=.01})}})},page_curl:function(){var t=this.resources.background.texture;this.addFilter("AmoyPageCurlFilter",{enabled:!1,global:!1,opened:!1,args:[0,0,0,0,t],oncreate:function(t){var e=document.querySelector("#container"),n=e.offsetWidth,o=e.offsetHeight;t.add(this,"posx",0,n),t.add(this,"posy",0,o),t.add(this,"startPosx",0,n),t.add(this,"startPosy",0,o)}})},sparks_drifting:function(){var t=this,e=document.querySelector("#container"),n=e.offsetWidth,o=e.offsetHeight;t.addFilter("AmoySparksDriftingFilter",{enabled:!1,global:!1,opened:!1,args:[o,n/3,2],oncreate:function(e){var o=this;e.add(this,"width",n/3,n),e.add(this,"strength",2,5),t.events.on("animate",function(){o.uniforms.uTime+=.01})}})},white_black_sketch:function(){var t=this;t.addFilter("AmoyWhiteBlackSketchFilter",{enabled:!1,global:!1,opened:!1,args:[!1,0],oncreate:function(e){var n=this;document.querySelector("#container"),e.add(this,"invertColor"),t.events.on("animate",function(){n.uniforms.uTime+=.01})}})},vcr:function(){var t=this;t.addFilter("AmoyVcrFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(e){var n=this;t.events.on("animate",function(){n.uniforms.uTime+=.01})}})},flame:function(){var t=this,e=document.querySelector("#container"),n=e.offsetWidth,o=e.offsetHeight;t.addFilter("AmoyFlameFilter",{enabled:!1,global:!1,opened:!1,args:[n/2,o/2,1],oncreate:function(e){var i=this;e.add(this,"posx",0,n),e.add(this,"posy",0,o),e.add(this,"strength",1,5),t.events.on("animate",function(){i.uniforms.uTime+=.01})}})},gameboy_style:function(){this.addFilter("AmoyGameboyStyleFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(t){}})},snow:function(){var t=this;t.addFilter("AmoySnowFilter",{enabled:!1,global:!1,opened:!1,args:[!1,0],oncreate:function(e){var n=this;document.querySelector("#container"),e.add(this,"blizard"),t.events.on("animate",function(){n.uniforms.uTime+=.01})}})},light_sweep:function(){var t=this;t.addFilter("AmoyLightSweepFilter",{enabled:!1,global:!1,opened:!1,fishOnly:!0,oncreate:function(e){var n=this;t.events.on("animate",function(){n.uniforms.uTime+=.01})}})},reflection:function(){this.addFilter("AmoyReflectionFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(t){}})},water_reflection:function(){var t=this;t.addFilter("AmoyWaterReflectionFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(e){var n=this;t.events.on("animate",function(){n.uniforms.uTime+=.01})}})},weather_rainy:function(){var t=this;t.addFilter("AmoyWeatherRainyFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(e){var n=this;t.events.on("animate",function(){n.uniforms.uTime+=.01})}})},weather_cloud:function(){var t=this;t.addFilter("AmoyWeatherCloudFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(e){var n=this;t.events.on("animate",function(){n.uniforms.uTime+=.01})}})},inner_outline:function(){var t=this;t.addFilter("AmoyInnerOutlineFilter",{enabled:!1,global:!1,opened:!1,oncreate:function(e){var n=this,o={_color:[n.color.r,n.color.g,n.color.b],set color(t){this._color=[t[0],t[1],t[2]],n.color={r:t[0]/255,g:t[1]/255,b:t[2]/255}},get color(){return this._color}};e.addColor(o,"color"),t.events.on("animate",function(){n.uniforms.uTime+=.01})}})}}),ct=new st;ct.load([{name:"background",url:"images/displacement_BG.jpg"},{name:"overlay",url:"images/overlay.png"},{name:"map",url:"images/displacement_map.png"},{name:"fish1",url:"images/displacement_fish1.png"},{name:"fish2",url:"images/displacement_fish2.png"},{name:"fish3",url:"images/displacement_fish3.png"},{name:"fish4",url:"images/displacement_fish4.png"},{name:"lightmap",url:"images/lightmap.png"},{name:"colormap",url:"images/colormap.png"}],function(){for(var t in ut)ut[t].call(ct)})}(PIXI,PIXI);
